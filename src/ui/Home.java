/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Home.java
 *
 * Created on May 21, 2009, 3:51:07 PM
 */

package ui;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;

import javax.swing.JOptionPane;
import javax.swing.UIManager;

import manager.IManager;
import dataModel.FreePoster;
import dataModel.GridPoster;

/**
 *
 * @author Matteo
 */
public class Home extends javax.swing.JFrame implements WindowListener{


	/** Creates new form Home */
	public Home(IManager manager) {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} catch (Exception e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		this.manager = manager;
		addWindowListener(this);
		initComponents();

	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {
		java.awt.GridBagConstraints gridBagConstraints;

		topPanel = new javax.swing.JPanel();
		caricaButton = new javax.swing.JButton();
		playButton = new javax.swing.JButton();
		jLabel1 = new javax.swing.JLabel();
		modificaButton = new javax.swing.JButton();
		creaButton = new javax.swing.JButton();
		downPanel = new javax.swing.JPanel();
		connettiButton = new javax.swing.JButton();
		wiiPanel = new javax.swing.JPanel();
		jLabel2 = new javax.swing.JLabel();
		jLabel3 = new javax.swing.JLabel();
		jProgressBar1 = new javax.swing.JProgressBar();
		jProgressBar2 = new javax.swing.JProgressBar();
		jSeparator1 = new javax.swing.JSeparator();
		
		setTitle("Home");
		setBackground(new java.awt.Color(51, 51, 255));
		setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
		getContentPane().setLayout(new java.awt.GridBagLayout());
		

		topPanel.setBackground(new java.awt.Color(181, 204, 249));
		topPanel.setLayout(new java.awt.GridBagLayout());

		caricaButton.setText("Carica Tabellone");
		caricaButton.setFont(new java.awt.Font("Cambria", 0, 24));
		caricaButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				caricaButtonActionPerformed(evt);
			}
		});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.ipadx = 45;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
		gridBagConstraints.insets = new java.awt.Insets(5, 6, 5, 6);
		topPanel.add(caricaButton, gridBagConstraints);

		playButton.setText("Fai Parlare");
		playButton.setFont(new java.awt.Font("Cambria", 0, 24));
		playButton.setEnabled(false);
		playButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				playButtonActionPerformed(evt);
			}
		});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 3;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.ipadx = 45;
		gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
		topPanel.add(playButton, gridBagConstraints);

		jLabel1.setIcon(new javax.swing.ImageIcon(".\\imm\\Untitled.png")); // NOI18N
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.gridwidth = 2;
		topPanel.add(jLabel1, gridBagConstraints);

		modificaButton.setText("Modifica Tabellone");
		modificaButton.setFont(new java.awt.Font("Cambria", 0, 24));
		modificaButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				modificaButtonActionPerformed(evt);
			}
		});
		modificaButton.setEnabled(false);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 3;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.ipadx = 45;
		gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
		topPanel.add(modificaButton, gridBagConstraints);

		creaButton.setText("Crea Tabellone");
		creaButton.setFont(new java.awt.Font("Cambria", 0, 24));
		creaButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				creaButtonActionPerformed(evt);
			}
		});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.ipadx = 45;
		gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
		topPanel.add(creaButton, gridBagConstraints);

		 gridBagConstraints = new java.awt.GridBagConstraints();
	     gridBagConstraints.gridx = 0;
	     gridBagConstraints.gridy = 2;
	     gridBagConstraints.gridwidth = 2;
	     gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
	     topPanel.add(jSeparator1, gridBagConstraints);

		
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.ipadx = 39;
		getContentPane().add(topPanel, gridBagConstraints);

		downPanel.setBackground(new java.awt.Color(181, 204, 249));
		downPanel.setLayout(new java.awt.GridBagLayout());

		connettiButton.setText("Connetti WiiMote");
		connettiButton.setFont(new java.awt.Font("Cambria", 0, 24));
		connettiButton.setActionCommand("Connetti");
		connettiButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				connettiButtonActionPerformed(evt);
			}
		});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.ipadx = 3;
		gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
		downPanel.add(connettiButton, gridBagConstraints);

		wiiPanel.setBackground(new java.awt.Color(255, 255, 255));
		wiiPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Informazioni WiiMote", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Cambria", 1, 15))); // NOI18N
		wiiPanel.setLayout(new java.awt.GridBagLayout());
		wiiPanel.setVisible(false);

		jLabel2.setBackground(new java.awt.Color(189, 204, 249));
		jLabel2.setText("Batteria:");
		jLabel2.setFont(new java.awt.Font("Cambria", 0, 24));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
		wiiPanel.add(jLabel2, gridBagConstraints);

		jLabel3.setBackground(new java.awt.Color(189, 204, 249));
		jLabel3.setText("Segnale:");
		jLabel3.setFont(new java.awt.Font("Cambria", 0, 24));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
		wiiPanel.add(jLabel3, gridBagConstraints);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
		wiiPanel.add(jProgressBar1, gridBagConstraints);
		
		
		this.getManager().batteryLevel(new ActionListener() {
			public void actionPerformed(ActionEvent evt) {
				batteryManager(evt);
			}
		});
		
		this.getManager().remoteAdded(new ActionListener() {
			public void actionPerformed(ActionEvent evt)
			{
				remoteManager(evt);
			}
		});
		
		manager.connectionManager(new ActionListener(){
			public void actionPerformed(ActionEvent e) {
				connectionManager();
				
			}
			
		});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
		wiiPanel.add(jProgressBar2, gridBagConstraints);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
		downPanel.add(wiiPanel, gridBagConstraints);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		getContentPane().add(downPanel, gridBagConstraints);

		pack();
		Toolkit tk = Toolkit.getDefaultToolkit();
        Dimension screenSize = tk.getScreenSize();
        int screenHeight = screenSize.height;
        int screenWidth = screenSize.width;
        
        setLocation((screenWidth-this.getSize().width) / 2, (screenHeight-this.getSize().height) / 2);
        this.setVisible(true);
	}// </editor-fold>//GEN-END:initComponents

	private void creaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creaButtonActionPerformed
		NewPosterFrame newPosterFrame = new NewPosterFrame(this, manager);
		newPosterFrame.setVisible(true);
	}//GEN-LAST:event_creaButtonActionPerformed

	private void caricaButtonActionPerformed(java.awt.event.ActionEvent evt) {
		LoadPosterFrame loadFrame = new LoadPosterFrame(this, manager);
	}
	
	private void modificaButtonActionPerformed(java.awt.event.ActionEvent evt) {
		ModificaGridPoster modifica=null;
		ModificaFreePoster modLib=null;
		if(manager.getIPoster() instanceof GridPoster)
			 modifica = new ModificaGridPoster(manager);
		else if((manager.getIPoster() instanceof FreePoster)&&(manager.getIPoster().isCalibated()))
			 modLib=new ModificaFreePoster(manager);
		else{
			CalibraOra nf = new CalibraOra(manager);
		}
			
		
			
	}

	private void connettiButtonActionPerformed(java.awt.event.ActionEvent evt) {
		connettiManager(evt);
	}

	private void playButtonActionPerformed(java.awt.event.ActionEvent evt) {
		if (manager.getIPoster().isCalibated()){
			manager.play();
			FaiParlare newframe = new FaiParlare(manager);
		}
		else{
			CalibraOra calibraOra = new CalibraOra(manager);
		}
	}
	
	private void batteryManager(ActionEvent e){
		if (wiiPanel.isVisible()==true){
			String s=e.getSource().toString();
		    jProgressBar1.setValue(Integer.parseInt(s));
			jProgressBar1.setString(jProgressBar1.getValue()+"%");
		}
	}
	
	private void remoteManager(ActionEvent e){
		//System.out.println("AAAAAA");
		String s=e.getSource().toString();
		if(Integer.parseInt(s)!=0)
				{
				connettiButton.setVisible(false);
				wiiPanel.setVisible(true);
				pack();
				}
		else
		{
			wiiPanel.setVisible(false);
			connettiButton.setVisible(true);
			connettiButton.setText("Connetti WiiMote");
			pack();
		
		}
	}
	
	private void connettiManager(ActionEvent evt){
		if(this.primoAccesso==true)
		{
			Object[] options = { "Ok", "Annulla" };
			int valu= JOptionPane.showOptionDialog(null, "Assicurarsi che il Bluetooth sia attivo", "CONNESSIONE BLUETOOTH",
			JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE,
			null, options, options[0]);
			if(valu==0)
			{
				this.primoAccesso=false;
				manager.connect();
				this.connettiButton.setText("Premi i tasti 1 e 2 del WiiMote");
			}
			
		}
		else
		{
		if(!wiiPanel.isVisible()){
			manager.connect();
			this.connettiButton.setText("Premi i tasti 1 e 2 del WiiMote");
		}
		}
		

	}
	private void connectionManager(){
		//if (wiiPanel.isVisible()==false)
		//	wiiPanel.setVisible(true);
	}
	
	/**
	 * @param args the command line a/rguments
	 */
	public static void main(String args[]) {
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new Home(null).setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private boolean primoAccesso=true;
	private javax.swing.JButton caricaButton;
	private javax.swing.JButton connettiButton;
	private javax.swing.JButton creaButton;
	private javax.swing.JPanel downPanel;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JProgressBar jProgressBar1;
	private javax.swing.JProgressBar jProgressBar2;
	private javax.swing.JButton modificaButton;
	private javax.swing.JButton playButton;
	private javax.swing.JPanel topPanel;
	private javax.swing.JPanel wiiPanel;
	private javax.swing.JSeparator jSeparator1;
	// End of variables declaration//GEN-END:variables
	private IManager manager;

	/**
	 * @return the manager
	 */
	public IManager getManager() {
		return manager;
	}

	
	public void enablePosterMethods(boolean b){
			modificaButton.setEnabled(b);
			playButton.setEnabled(b);
	}
	
	public void windowActivated(WindowEvent arg0) {
		// TODO Auto-generated method stub

	}

	
	public void windowClosed(WindowEvent arg0) {
		// TODO Auto-generated method stub

	}

	
	public void windowClosing(WindowEvent e) {
		e.getWindow().setVisible(false);
		e.getWindow().dispose();
		manager.endSystem();

	}

	
	public void windowDeactivated(WindowEvent arg0) {
		// TODO Auto-generated method stub

	}

	
	public void windowDeiconified(WindowEvent arg0) {
		// TODO Auto-generated method stub

	}

	
	public void windowIconified(WindowEvent arg0) {
		// TODO Auto-generated method stub

	}

	
	public void windowOpened(WindowEvent arg0) {
		// TODO Auto-generated method stub

	}

}
